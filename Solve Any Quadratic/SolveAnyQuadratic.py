from manim import *


class Animations(Scene):
    def construct(self):
        intro = Tex(r'$How~to~use~it?$').scale(2)
        intro2 = Tex(r'$How~to~get~it?$').scale(2)

        scaryQuadratic1 = Tex(r'$5x^2 - 3x+ 3 = 0$').move_to([0, 2, 0]).scale(2)
        scaryQuadratic2 = Tex(r'$114x^2 - 323x - 228 = 0$').move_to([0, -1, 0]).scale(2)

        generalQuadratic = Tex(r'$ax^2 + bx + c = 0$').move_to([0, 2, 0]).scale(2)
        xEquals = Tex(r'$x = ?$').move_to([0, 0, 0]).scale(2)

        minusC1 = Tex(r'$-c$').move_to([1.5, 0, 0]).scale(2)
        minusC2 = Tex(r'$-c$').move_to([3.3, 0, 0]).scale(2)

        newQuadratic = Tex(r'$ax^2 +bx = -c$').move_to([0, -2, 0]).scale(2)

        divisionByA = Tex(r'$\frac{ax^2 + bx}{a} = \frac{-c}{a}$').move_to([0, 2, 0]).scale(2)
        divisionByA2 = Tex(r'$\frac{ax^2}{a} + \frac{bx}{a} = \frac{-c}{a}$').scale(2)
        newGeneralQuadratic = Tex(r'$x^2 + \frac{b}{a} = \frac{-c}{a}$').move_to([0, -2, 0]).scale(2)

        possibleFactor = Tex(r'$x\left(x+\frac{b}{a}\right) = \frac{-c}{a}$').move_to([0, 2, 0]).scale(2)
        deadEnd = Tex(r'$Dead~end!$').scale(2)

        bestCase = Tex(r'$(x+z)^2$').move_to([0, 2, 0]).scale(2)
        bestCase2 = Tex(r'$\sqrt{(x+z)^2}$').scale(2)
        bestCase3 = Tex(r'$x = ~$').move_to([0, -2, 0]).scale(2)

        expansion = Tex(r'$(x+z)^2 =~?$').move_to([0, 2, 0]).scale(2)
        expansion2 = Tex(r'$(x+z)(x+z)$').scale(2)
        expansion3 = Tex(r'$x^2 + xz + xz+ z^2$').move_to([0, -1.5, 0]).scale(2)
        expansion4 = Tex(r'$x^2 + 2xz + z^2$').move_to([0, -3, 0]).scale(2)

        ana = Tex(r'$x^2 + \frac{b}{a}x $').move_to([0, 2, 0]).scale(2)
        ana2 = Tex(r'$x^2  + 2xz + z^2$').move_to([0, -1, 0]).scale(2)

        analysis = Tex(r'$\frac{b}{a}x = 2xz$').move_to([0, 2, 0]).scale(2)
        analysis2 = Tex(r'$\frac{b}{2a} = z$').scale(2)
        analysis3 = Tex(r'$\frac{b^2}{4a^2} = z^2$').move_to([0, -2, 0]).scale(2)

        backToStandard = MathTex(r'x^2 + \frac{b}{a} + \frac{b^2}{4a^2} &= \frac{b^2}{4a^2} +  \frac{-c}{a} \\ &=\frac{b^2}{4a^2} + \frac{-4ac}{4a^2} \\ &=\frac{b^2-4ac}{4a^2}').scale(1.5)

        bestSimplify = Tex(r'$\left(x+\frac{b}{2a}\right)^2 = \frac{b^2-4ac}{4a^2}$').scale(2)

        squareRoot = Tex(r'$\sqrt{\left(x+\frac{b}{2a}\right)^2} = \sqrt{\frac{b^2-4ac}{4a^2}}$').move_to([0, 2, 0]).scale(2)
        squareRootSimplify = Tex(r'$x+\frac{b}{2a} = \frac{\sqrt{b^2-4ac}}{\sqrt{4a^2}}$').move_to([0, -1, 0]).scale(2)
        plusOrMinusSimplify = Tex(r'$x+\frac{b}{2a} = \pm \frac{\sqrt{b^2-4ac}}{2a}$').move_to([0, -3, 0]).scale(2)

        plusOrMinusExample = Tex(r'$(4)^2 = 16$').move_to([0, 2, 0]).scale(2)
        plusOrMinus2 = Tex(r'$(-4)^2 = 16$').scale(2)
        appliedPlusOrMinus = Tex(r'$\sqrt{16} = 4, -4, ~OR~  \pm 4$').move_to([0, -2, 0]).scale(2)

        finalSquareRootSimplify = Tex(r'$x+\frac{b}{2a} = \pm \frac{\sqrt{b^2-4ac}}{2a}$').scale(2)
        finalSimplify = Tex(r'$x = \frac{-b \pm \sqrt{b^2-4ac}}{2a}$').move_to([0, -2, 0]).scale(2)

        end = Tex(r'$Don\textquotesingle t~memorize:Derive!$').scale(2)

        step1 = Tex(r'$1.~Know~the~problem$').move_to([0, 2, 0]).scale(2)
        step2 = Tex(r'$2.~Know~your~tools$').scale(2)
        step3 = Tex(r'$3.~Know~how~to~use~them$').move_to([0, -2, 0]).scale(2)
        

        self.play(Write(intro))
        self.wait(3)
        self.play(Uncreate(intro), Write(intro2))
        self.wait(2)
        self.play(Uncreate(intro2))
        self.play(Write(generalQuadratic))
        self.wait(4)
        self.play(Write(xEquals))
        self.wait(2)
        self.play(Uncreate(VGroup(generalQuadratic, xEquals)))
        generalQuadratic = Tex(r'$ax^2 + bx + c = 0$').move_to([0, 2, 0]).scale(2)
        self.play(Write(generalQuadratic))
        self.play(Write(VGroup(minusC1, minusC2)))
        self.wait(9)
        self.play(Write(newQuadratic))
        self.play(Uncreate(VGroup(minusC1, minusC2, newQuadratic, generalQuadratic)))
        self.play(Write(divisionByA))
        self.wait(2)
        self.play(Write(divisionByA2))
        self.wait(1)
        self.play(Write(newGeneralQuadratic))
        self.wait(1)
        self.play(Uncreate(VGroup(newGeneralQuadratic, divisionByA, divisionByA2)))
        self.play(Write(possibleFactor))
        self.wait(5)
        self.play(Write(deadEnd))
        self.wait(5)
        self.play(Uncreate(VGroup(deadEnd, possibleFactor)))
        self.play(Write(bestCase))
        self.wait(8)
        self.play(Write(bestCase2))
        self.wait(3)
        self.play(Write(bestCase3))
        self.wait(8)
        self.play(Uncreate(VGroup(bestCase, bestCase2, bestCase3)))
        self.play(Write(expansion))
        self.wait(4)
        self.play(Write(expansion2))
        self.wait(1)
        self.play(Write(expansion3))
        self.wait(2)
        self.play(Write(expansion4))
        self.wait(1)
        self.play(Uncreate(VGroup(expansion, expansion2, expansion3, expansion4)))
        self.play(Write(ana))
        self.wait(1)
        self.play(Write(ana2))
        self.wait(3)
        self.play(Uncreate(VGroup(ana, ana2)))
        self.play(Write(analysis))
        self.wait(1)
        self.play(Write(analysis2))
        self.wait(1)
        self.play(Write(analysis3))
        self.wait(3)
        self.play(Uncreate(VGroup(analysis, analysis2, analysis3)))
        self.play(Write(backToStandard), run_time=3)
        self.wait(1)
        self.play(Uncreate(backToStandard))
        self.play(Write(bestSimplify))
        self.wait(1)
        self.play(Uncreate(bestSimplify))
        self.play(Write(squareRoot))
        self.wait(1)
        self.play(Write(squareRootSimplify))
        self.wait(1)
        self.play(Write(plusOrMinusSimplify))
        self.wait(16)
        self.play(Uncreate(VGroup(squareRoot, squareRootSimplify, plusOrMinusSimplify)))
        self.play(Write(plusOrMinusExample))
        self.wait(1)
        self.play(Write(plusOrMinus2))
        self.wait(5)
        self.play(Write(appliedPlusOrMinus))
        self.wait(15)
        self.play(Uncreate(VGroup(plusOrMinusExample, plusOrMinus2, appliedPlusOrMinus)))
        self.play(Write(finalSquareRootSimplify))
        self.wait(3)
        self.play(Write(finalSimplify))
        self.wait(5)
        self.play(Uncreate(VGroup(finalSquareRootSimplify, finalSimplify)))
        self.play(Write(end))
        self.wait(8)
        self.play(Uncreate(end))
        self.play(Write(step1))
        self.wait(2)
        self.play(Write(step2))
        self.wait(8)
        self.play(Write(step3))
        self.wait(2)
